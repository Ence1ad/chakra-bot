# this is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
    listen 80;
    root /usr/share/nginx/www;
    index index.html index.htm;
    server_name example.com;
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name example.com; # Your custom hostname

    # SSL certificate and key
    ssl_certificate     /root/certs/example.com/selfsigned.crt;
    ssl_certificate_key /root/certs/example.com/selfsigned.key;

    # SSL configuration (you may need to adjust this)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    location /portainer/ {
        proxy_pass https://portainer:9443/; # Forward requests to Portainer container
        proxy_set_header Host $host;
    }

    location /grafana/ {
        proxy_set_header Host $http_host;
        proxy_pass http://grafana:3000;
    }

    location /prometheus {
        proxy_set_header Host $http_host;
        proxy_pass http://prometheus:9090;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        auth_basic "Prometheus Access";  # Authentication realm
        auth_basic_user_file /etc/nginx/.htpasswd;  # Path to the password file
    }

    location /alertmanager {
        rewrite /alertmanager/(.*) /$1  break;
        proxy_pass http://alertmanager:9093;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location = /health {
        access_log off;
        add_header 'Content-Type' 'application/json';
        return 200 'OK';
    }
}

