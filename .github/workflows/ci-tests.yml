name: CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        lang-code: ["en", "ru"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies

      - name: Set up Environment Variables
        id: set_envs
        run: |
          mv .env.example .env  # Rename the example .env file to .env (if needed)
          # Ensure the .env file exists in the current directory and export all variables
          if [ -f .env ]; then
            # Replace the existing BOT_TOKEN value with the one from GitHub Secrets
            sed -i "s/BOT_TOKEN=.*/BOT_TOKEN=${{ secrets.MY_BOT_TOKEN }}/" .env
            source .env
          fi
#          echo "PG_URL=postgresql+asyncpg://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/test_db" >> "$GITHUB_ENV"
#          echo "REDIS_URL=redis://:$REDIS_PASSWORD@localhost:6379/11" >> "$GITHUB_ENV"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest-asyncio pytest-cov ruff
          pip install -r requirements.txt

      - name: Set up Docker Compose
        run: |
          docker-compose -f ./docker-compose.dev.yml up -d db redis tgbot

      - name: Wait for services to start
        run: |
          sleep 10 && docker ps -f health=healthy

      - name: Run tests
        run: |
          pytest tests/ --lang ${{ matrix.lang-code }}
#          pytest --cov=tgbot ./tests/ --db-url $PG_URL --redis $REDIS_URL --lang $LANG_CODE
           

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Lint with Ruff
        run: |
          ruff --output-format=github --target-version=py311 .
        continue-on-error: true
